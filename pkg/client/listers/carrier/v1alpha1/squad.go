// Copyright 2021 The OCGI Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/ocgi/carrier/pkg/apis/carrier/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// SquadLister helps list Squads.
type SquadLister interface {
	// List lists all Squads in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.Squad, err error)
	// Squads returns an object that can list and get Squads.
	Squads(namespace string) SquadNamespaceLister
	SquadListerExpansion
}

// squadLister implements the SquadLister interface.
type squadLister struct {
	indexer cache.Indexer
}

// NewSquadLister returns a new SquadLister.
func NewSquadLister(indexer cache.Indexer) SquadLister {
	return &squadLister{indexer: indexer}
}

// List lists all Squads in the indexer.
func (s *squadLister) List(selector labels.Selector) (ret []*v1alpha1.Squad, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Squad))
	})
	return ret, err
}

// Squads returns an object that can list and get Squads.
func (s *squadLister) Squads(namespace string) SquadNamespaceLister {
	return squadNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// SquadNamespaceLister helps list and get Squads.
type SquadNamespaceLister interface {
	// List lists all Squads in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.Squad, err error)
	// Get retrieves the Squad from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.Squad, error)
	SquadNamespaceListerExpansion
}

// squadNamespaceLister implements the SquadNamespaceLister
// interface.
type squadNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Squads in the indexer for a given namespace.
func (s squadNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.Squad, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.Squad))
	})
	return ret, err
}

// Get retrieves the Squad from the indexer for a given namespace and name.
func (s squadNamespaceLister) Get(name string) (*v1alpha1.Squad, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("squad"), name)
	}
	return obj.(*v1alpha1.Squad), nil
}
